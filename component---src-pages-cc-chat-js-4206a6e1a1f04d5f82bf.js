webpackJsonp([0xf28123964ee7],{180:function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=n(4),u=o(i),c=n(42),s=o(c),f=function(e){function t(){return l(this,t),r(this,e.apply(this,arguments))}return a(t,e),t.prototype.render=function(){return u.default.createElement("div",null,u.default.createElement("div",null,u.default.createElement(s.default,{to:"/coding-challenges"},"Back to coding challenges")),u.default.createElement("div",null,u.default.createElement("h2",null,"Chat Application"),u.default.createElement("p",null,"This challenge involved taking the small boilerplate template provided and designing the client side of a simple chat app. There was a dummy python server provided but due to issues, I substituted it for a node/express server instead. This challenge was done in vanilla HTML with jQuery."),u.default.createElement("a",{href:"https://github.com/Kiwilicious/tinychat",target:"_blank"},"Code here")))},t}(i.Component);t.default=f,e.exports=t.default}});
//# sourceMappingURL=component---src-pages-cc-chat-js-4206a6e1a1f04d5f82bf.js.map