webpackJsonp([0xce55640eff9f],{182:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var l=n(4),o=a(l),r=function(){return o.default.createElement("div",null,o.default.createElement("div",null,o.default.createElement("h2",null,"Input Form"),o.default.createElement("p",null,"This challenge involved replicating the look and functionality of an input form provided in a gif. While most of the code was simple enough, I didn't have much experience implementing animation on buttons. Instead I opted to use CSS transitions to color in the border of the button. This challenge was done in React."),o.default.createElement("a",{href:"https://codepen.io/Kiwilicious/pen/RxqWXY?editors=0110",target:"_blank",rel:"noopener noreferrer"},"Code here"),o.default.createElement("hr",null),o.default.createElement("h2",null,"Ruby Implementation of Erlang Code"),o.default.createElement("p",null,"This challenge involved taking the code provided in the language Erlang and recreate it in Ruby. I had no experience in either language so I skimmed through the Erlang docs. I also took some time to learn the basics of Ruby as I had planned on taking up the language it in the future. Turns out the logic of the code was simple enough, although I tripped over a few times because of syntax. This challenge was done in vanilla Ruby."),o.default.createElement("a",{href:"https://gist.github.com/dudo/93c0d1ee5b627c2a6cde30616540fb7f",target:"_blank",rel:"noopener noreferrer"},"Code in Erlang"),o.default.createElement("br",null),o.default.createElement("a",{href:"https://gist.github.com/Kiwilicious/3b6728f4276fe7beb14795f830abbebe",target:"_blank",rel:"noopener noreferrer"},"Code in Ruby")))};t.default=r,e.exports=t.default}});
//# sourceMappingURL=component---src-pages-cc-fsinput-jsx-761d76416a48cbd0a1b9.js.map