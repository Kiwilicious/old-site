{"version":3,"sources":["webpack:///component---src-pages-portfolio-chat-app-jsx-eb5b14c62d044a01a004.js","webpack:///./src/pages/portfolio/chatApp.jsx"],"names":["webpackJsonp","272","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_Typography","_Typography2","ChatApp","createElement","variant","gutterBottom","href","target","rel"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAYA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,IDcKQ,EAAeP,EAAuBM,GCZrCE,EAAU,iBACdH,GAAAF,QAAAM,cAAA,WACEJ,EAAAF,QAAAM,cAAAF,EAAAJ,SAAYO,QAAQ,WAAWC,cAAA,GAA/B,YAGAN,EAAAF,QAAAM,cAAAF,EAAAJ,SAAYO,QAAQ,cAApB,mSAMAL,EAAAF,QAAAM,cAAAF,EAAAJ,SAAYO,QAAQ,SAClBL,EAAAF,QAAAM,cAAA,KAAGG,KAAK,0CAA0CC,OAAO,SAASC,IAAI,uBAAtE,eD8BLhB,GAAQK,QCzBMK,ED0BdX,EAAOC,QAAUA,EAAiB","file":"component---src-pages-portfolio-chat-app-jsx-eb5b14c62d044a01a004.js","sourcesContent":["webpackJsonp([6089102518991],{\n\n/***/ 272:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Typography = __webpack_require__(35);\n\t\n\tvar _Typography2 = _interopRequireDefault(_Typography);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ChatApp = function ChatApp() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      _Typography2.default,\n\t      { variant: 'display1', gutterBottom: true },\n\t      'Chat App'\n\t    ),\n\t    _react2.default.createElement(\n\t      _Typography2.default,\n\t      { variant: 'subheading' },\n\t      'This challenge involved taking the small boilerplate template provided and designing the client side of a simple chat app. There was a dummy python server provided but due to issues, I substituted it for a node/express server instead. This challenge was done in vanilla HTML with jQuery.'\n\t    ),\n\t    _react2.default.createElement(\n\t      _Typography2.default,\n\t      { variant: 'body2' },\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: 'https://github.com/Kiwilicious/tinychat', target: '_blank', rel: 'noopener noreferrer' },\n\t        'Code here'\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\texports.default = ChatApp;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-portfolio-chat-app-jsx-eb5b14c62d044a01a004.js","import React from 'react';\nimport Typography from 'material-ui/Typography';\n\nconst ChatApp = () => (\n  <div>\n    <Typography variant=\"display1\" gutterBottom>\n      Chat App\n    </Typography>\n    <Typography variant=\"subheading\">\n      This challenge involved taking the small boilerplate template provided and designing the\n      client side of a simple chat app. There was a dummy python server provided but due to\n      issues, I substituted it for a node/express server instead. This challenge was done in\n      vanilla HTML with jQuery.\n    </Typography>\n    <Typography variant=\"body2\">\n      <a href=\"https://github.com/Kiwilicious/tinychat\" target=\"_blank\" rel=\"noopener noreferrer\">Code here</a>\n    </Typography>\n  </div>\n);\n\nexport default ChatApp;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/portfolio/chatApp.jsx"],"sourceRoot":""}